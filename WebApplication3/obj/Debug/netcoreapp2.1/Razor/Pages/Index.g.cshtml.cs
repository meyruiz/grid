#pragma checksum "C:\Users\mayra.ruiz\OneDrive - Epicor\Documents\grid\WebApplication3\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "454ff0234a8b8ffed86f2eb3ac5abaae40214dca"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(WebApplication3.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Index.cshtml", typeof(WebApplication3.Pages.Pages_Index), null)]
namespace WebApplication3.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\mayra.ruiz\OneDrive - Epicor\Documents\grid\WebApplication3\Pages\_ViewImports.cshtml"
using WebApplication3;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"454ff0234a8b8ffed86f2eb3ac5abaae40214dca", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3c0aa44830bef36841a062868044c1fc5e79428b", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "C:\Users\mayra.ruiz\OneDrive - Epicor\Documents\grid\WebApplication3\Pages\Index.cshtml"
  
    ViewData["Title"] = "Home page";

#line default
#line hidden
            BeginContext(71, 1944, true);
            WriteLiteral(@"
<div id=""dialog"" title=""Cell Settings"">
    <div>
        <label>Size</label>
    </div>
    <div>
        <span style=""right: 0;"">
            Length:
            <input type=""text"" class=""item_lenFT"" style=""width: 35px;""> FT
            <input type=""text"" class=""item_lenIN"" style=""width: 35px;""> IN

            Width: <input type=""text"" class=""item_w"" style=""width: 35px;""> IN
        </span>
    </div>
    <div>
        <button type=""button"" class=""btn add-horizontal-offcut"" href=""#add-horizontal-offcut"" style=""margin-bottom:15px;"">Horizontal Offcut</button>
        <button type=""button"" class=""btn add-vertical-offcut"" href=""#add-vertical-offcut"" style=""margin-bottom:15px;"">Vertical Offcut</button>
    </div>
</div>

<!-- Modal -->
<div class=""modal fade"" id=""exampleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
      ");
            WriteLiteral(@"          <h5 class=""modal-title"" id=""exampleModalLabel"">Enter Cut Size</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                <p>Length: <input id=""lengthFT"" type=""text"" name=""lengthFT""> FT <input id=""lengthIN"" type=""text"" name=""lengthIN""> IN </p>
                <p>Width: <input id=""widthIN"" type=""text"" name=""widthIN""> IN </p>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
                <button type=""button"" class=""btn btn-primary add-cust-cell"" href=""#add-cust-cell"" data-toggle=""modal"" data-target=""#exampleModal"">Create</button>
            </div>
        </div>
    </div>
</div>
");
            EndContext();
            BeginContext(2015, 1621, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "798c7135d9454d53903824e334cab24e", async() => {
                BeginContext(2021, 1608, true);
                WriteLiteral(@"
    <div id=""scale"">
        <p>Scale</p>
        <p>2' x 1.00""</p>
        <hr />
        <button type=""button"" class=""btn btn-primary"" data-toggle=""modal"" data-target=""#exampleModal"">Add Cut</button>
        <hr />
        <button type=""button"" class=""btn"" style=""margin-bottom:15px;"" onclick=""changeZoom(1)"">Zoom In</button>
        <button type=""button"" class=""btn"" style=""margin-bottom:15px;"" onclick=""changeZoom(-1)"">Zoom Out</button>
        <button type=""button"" class=""btn print"" href=""#print"" onclick=""PrintElem()"" style=""margin-bottom:15px;"">Print</button>
    </div>
    <div id=""main"" class=""vbox"">
        <div id=""info-general"">
            <p>SIZE: <span id=""gridHeight"">600</span>' X <span id=""gridWidth"">84</span>.0000"" ITEM: FERROFLEX STEEL REINFORCED BELT    LOT: D0118990-B    CUST: ACME MINING OF MINNESOTA, INC</p>
            <p>REQUIRED: 2 CUTS - 80'6.0000"" X 36.0000 ****1 OF 2 ADDED ****</p>
        </div>
        <div id=""container"">
            <!--<div class=""col-md-12 borde");
                WriteLiteral(@"r"" style=""height:637px; overflow: scroll;display: flex;flex-wrap: wrap;"">-->
            <div class='ruler-horizontal'></div>
            <div id=""grid-container"" class=""grid-container"">
                <div class='ruler-vertical'></div>
                <ul id=""grid"" class=""grid"">
                    <li class=""position-highlight"">
                        <div class=""inner""></div>
                    </li>
                </ul>
            </div>
        </div>
        <button type=""button"" class=""btn save"" style=""float:right; width:60px;"">Save</button>
    </div>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3636, 3180, true);
            WriteLiteral(@"


<script type=""text/javascript"">

    let zoom = 10;
    let zoomScale = 1;
    const scaleWidthToHeight = 1;
    const grid = document.querySelector(""#grid"");
    const rulerHorizontal = document.querySelector("".ruler-horizontal"");
    const widthHorizontalRuler = grid.clientWidth;
    const rulerVertical = document.querySelector("".ruler-vertical"");
    const widthVerticalRuler = rulerVertical.clientHeight;
    const gridWidth = 84;
    const gridHeight = 600;
    let flagResize = false;

    $(document).ready(function () {
        $('[data-toggle=""tooltip""]').tooltip();
        init(); 
        createRulerDimensions();
    });

    function init() {
        rulerHorizontal.style.width = `${grid.clientWidth}px`;
        rulerVertical.style.height = `${widthVerticalRuler / scaleWidthToHeight}px`;
    }

    function createRulerDimensions() {
        let numItemsHorizontal = gridWidth / 12;
        let numItemsVertical = gridHeight / 20;

        for (let i = 0; i <= numItemsH");
            WriteLiteral(@"orizontal; i++) {
            let div = document.createElement('div');
            div.className = 'in';
            div.dataset.text = (i * 12) + '.0""';
            rulerHorizontal.appendChild(div);
        }

        for (let i = 0; i <= numItemsVertical; i++) {
            let div = document.createElement('div');
            div.className = 'in';
            div.dataset.text = (i * 20) + "".0'"";
            rulerVertical.appendChild(div);
        }
    }

    function setZoom(zoom, el) {
        transformOrigin = [0, 0];
        el = el || instance.getContainer();
        var p = [""webkit"", ""moz"", ""ms"", ""o""],
            s = ""scale("" + zoom + "")"",
            oString = (transformOrigin[0] * 100) + ""% "" + (transformOrigin[1] * 100) + ""%"";

        for (var i = 0; i < p.length; i++) {
            el.style[p[i] + ""Transform""] = s;
            el.style[p[i] + ""TransformOrigin""] = oString;
        }

        el.style[""transform""] = s;
        el.style[""transformOrigin""] = oString;
  ");
            WriteLiteral(@"  }

    function showVal(a) {
        zoomScale = Number(a) / 10;
        setZoom(zoomScale, document.getElementsByClassName('grid')[0])
    }

    function changeZoom(a) {
        const tooltips = document.querySelectorAll('.tooltiptext');
        const fontSize = 4.5;
        const width = 200;
        const height = 140;

        if ((zoom != 7 && a != 1) || (zoom != 14 && a != -1)) {
            zoom += a;
            zoomScale = Number(zoom) / 10;
            setZoom(zoomScale, document.getElementsByClassName('grid')[0]);

            rulerHorizontal.style.width = `${widthHorizontalRuler * zoomScale}px`;
            rulerVertical.style.height = `${widthVerticalRuler * zoomScale}px`;

            if (zoom < 10) {
                tooltips.forEach(tooltip => {
                    tooltip.style.fontSize = `${fontSize / zoomScale}em`;
                    tooltip.style.width = `${width / zoomScale}px`;
                    tooltip.style.height = `${height / zoomScale}px`;
            ");
            WriteLiteral("    });\r\n            }\r\n        }\r\n        gridData[\"DemoGrid\"].hideInfoCutIfOverflow();\r\n    }\r\n\r\n</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
