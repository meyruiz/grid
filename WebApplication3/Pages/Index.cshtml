@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<body>
    <div class="header">
        <a href="#remove-row" class="button remove-row">-</a>
        <a href="#add-row" class="button add-row">+</a>
        <p>
            <a class="github-button" href="https://github.com/hootsuite/grid" data-style="mega" data-count-href="/hootsuite/grid/stargazers" data-count-api="/repos/hootsuite/grid#stargazers_count" data-count-aria-label="# stargazers on GitHub" aria-label="Star hootsuite/grid on GitHub">GitHub</a>
        </p>
    </div>

    <!--<canvas id="example"></canvas>-->

    <div class="grid-container">
        <ul id="grid" class="grid">
            <li class="position-highlight">
                <div class="inner"></div>
            </li>
        </ul>
    </div>
    <script async defer id="github-bjs" src="https://buttons.github.io/buttons.js"></script>
</body>
            <!--

            <div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="6000">
                <ol class="carousel-indicators">
                    <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
                    <li data-target="#myCarousel" data-slide-to="1"></li>
                    <li data-target="#myCarousel" data-slide-to="2"></li>
                </ol>
                <div class="carousel-inner" role="listbox">
                    <div class="item active">
                        <img src="~/images/banner1.svg" alt="ASP.NET" class="img-responsive" />
                        <div class="carousel-caption" role="option">
                            <p>
                                Learn how to build ASP.NET apps that can run anywhere.
                                <a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkID=525028&clcid=0x409">
                                    Learn More
                                </a>
                            </p>
                        </div>
                    </div>
                    <div class="item">
                        <img src="~/images/banner2.svg" alt="Visual Studio" class="img-responsive" />
                        <div class="carousel-caption" role="option">
                            <p>
                                There are powerful new features in Visual Studio for building modern web apps.
                                <a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkID=525030&clcid=0x409">
                                    Learn More
                                </a>
                            </p>
                        </div>
                    </div>
                    <div class="item">
                        <img src="~/images/banner3.svg" alt="Microsoft Azure" class="img-responsive" />
                        <div class="carousel-caption" role="option">
                            <p>
                                Learn how Microsoft's Azure cloud platform allows you to build, deploy, and scale web apps.
                                <a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkID=525027&clcid=0x409">
                                    Learn More
                                </a>
                            </p>
                        </div>
                    </div>
                </div>
                <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
                    <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
                    <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
            </div>

            <div class="row">
                <div class="col-md-3">
                    <h2>Application uses</h2>
                    <ul>
                        <li>Sample pages using ASP.NET Core Razor Pages</li>
                        <li>Theming using <a href="https://go.microsoft.com/fwlink/?LinkID=398939">Bootstrap</a></li>
                    </ul>
                </div>
                <div class="col-md-3">
                    <h2>How to</h2>
                    <ul>
                        <li><a href="https://go.microsoft.com/fwlink/?linkid=852130">Working with Razor Pages.</a></li>
                        <li><a href="https://go.microsoft.com/fwlink/?LinkId=699315">Manage User Secrets using Secret Manager.</a></li>
                        <li><a href="https://go.microsoft.com/fwlink/?LinkId=699316">Use logging to log a message.</a></li>
                        <li><a href="https://go.microsoft.com/fwlink/?LinkId=699317">Add packages using NuGet.</a></li>
                        <li><a href="https://go.microsoft.com/fwlink/?LinkId=699319">Target development, staging or production environment.</a></li>
                    </ul>
                </div>
                <div class="col-md-3">
                    <h2>Overview</h2>
                    <ul>
                        <li><a href="https://go.microsoft.com/fwlink/?LinkId=518008">Conceptual overview of what is ASP.NET Core</a></li>
                        <li><a href="https://go.microsoft.com/fwlink/?LinkId=699320">Fundamentals of ASP.NET Core such as Startup and middleware.</a></li>
                        <li><a href="https://go.microsoft.com/fwlink/?LinkId=398602">Working with Data</a></li>
                        <li><a href="https://go.microsoft.com/fwlink/?LinkId=398603">Security</a></li>
                        <li><a href="https://go.microsoft.com/fwlink/?LinkID=699321">Client side development</a></li>
                        <li><a href="https://go.microsoft.com/fwlink/?LinkID=699322">Develop on different platforms</a></li>
                        <li><a href="https://go.microsoft.com/fwlink/?LinkID=699323">Read more on the documentation site</a></li>
                    </ul>
                </div>
                <div class="col-md-3">
                    <h2>Run &amp; Deploy</h2>
                    <ul>
                        <li><a href="https://go.microsoft.com/fwlink/?LinkID=517851">Run your app</a></li>
                        <li><a href="https://go.microsoft.com/fwlink/?LinkID=517853">Run tools such as EF migrations and more</a></li>
                        <li><a href="https://go.microsoft.com/fwlink/?LinkID=398609">Publish to Microsoft Azure App Service</a></li>
                    </ul>
                </div>
            </div>
            -->

    <script>
        // the canvas logic should be done once somewhere else 
        var w = 1200;
        var h = 800;
        // grid step
        var step = 20;
        var canvasElementId = 'example';


        var canvas = document.getElementById(canvasElementId);
        // this is how you resize the canvas
        canvas.width = w;
        canvas.height = h;

        var ctx = canvas.getContext('2d');


        // the render logic should be focusing on the rendering 
        var drawGrid = function (ctx, w, h, step) {
            ctx.beginPath();
            for (var x = 0; x <= w; x += step) {
                ctx.moveTo(x, 0);
                ctx.lineTo(x, h);
            }
            // set the color of the line
            ctx.strokeStyle = 'rgb(128,128,128)';
            ctx.lineWidth = 0.5;
            // the stroke will actually paint the current path 
            ctx.stroke();
            // for the sake of the example 2nd path
            ctx.beginPath();
            for (var y = 0; y <= h; y += step) {
                ctx.moveTo(0, y);
                ctx.lineTo(w, y);
            }
            // for your original question - you need to stroke only once
            ctx.stroke();
        };


        drawGrid(ctx, w, h, step);

        /*var drawGrid = function (w, h, id) {
            var canvas = document.getElementById(id);
            var ctx = canvas.getContext('2d');
            ctx.canvas.width = w;
            ctx.canvas.height = h;

            var data = '<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg"> \
            <defs> \
                <pattern id="smallGrid" width="8" height="8" patternUnits="userSpaceOnUse"> \
                    <path d="M 8 0 L 0 0 0 8" fill="none" stroke="gray" stroke-width="0.5" /> \
                </pattern> \
                <pattern id="grid" width="80" height="80" patternUnits="userSpaceOnUse"> \
                    <rect width="80" height="80" fill="url(#smallGrid)" /> \
                    <path d="M 80 0 L 0 0 0 80" fill="none" stroke="gray" stroke-width="1" /> \
                </pattern> \
            </defs> \
            <rect width="100%" height="100%" fill="url(#smallGrid)" /> \
        </svg>';

            console.log(data);

            var DOMURL = window.URL || window.webkitURL || window;

            var img = new Image();
            var svg = new Blob([data], { type: 'image/svg+xml;charset=utf-8' });
            var url = DOMURL.createObjectURL(svg);

            img.onload = function () {
                ctx.drawImage(img, 0, 0);
                DOMURL.revokeObjectURL(url);
            }
            img.src = url;
        }
        drawGrid(800, 400, "example");*/
    </script>
